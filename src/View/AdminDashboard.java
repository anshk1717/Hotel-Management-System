/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author 91964
 */
public class AdminDashboard extends javax.swing.JFrame {

    Connection con = null;
    ResultSet rs = null;
    PreparedStatement ps = null;
    
    public AdminDashboard() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        AddRooms = new javax.swing.JButton();
        DeleteRooms = new javax.swing.JButton();
        UpdateRooms = new javax.swing.JButton();
        ShowRooms = new javax.swing.JButton();
        BookedDetails = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Bedno = new javax.swing.JComboBox<>();
        typeroom = new javax.swing.JComboBox<>();
        txtRoomNo = new javax.swing.JTextField();
        txtRoomPrice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Exit = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        RoomTable = new javax.swing.JTable();

        jButton3.setText("jButton3");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        AddRooms.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        AddRooms.setText("Add Room");
        AddRooms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddRoomsActionPerformed(evt);
            }
        });

        DeleteRooms.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        DeleteRooms.setText("Delete Room");
        DeleteRooms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteRoomsActionPerformed(evt);
            }
        });

        UpdateRooms.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        UpdateRooms.setText("Update Room");
        UpdateRooms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateRoomsActionPerformed(evt);
            }
        });

        ShowRooms.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        ShowRooms.setText("Show Rooms");
        ShowRooms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowRoomsActionPerformed(evt);
            }
        });

        BookedDetails.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        BookedDetails.setForeground(new java.awt.Color(51, 51, 51));
        BookedDetails.setText("Booked Room Detalis");
        BookedDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookedDetailsActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel1.setText("Room No :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel3.setText("Room Price :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel4.setText("Bed");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel5.setText("Type :");

        Bedno.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Bedno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "1", "2" }));

        typeroom.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        typeroom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Ac", "Non Ac", "Standard", "Deluxe", "Luxuary" }));

        txtRoomNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRoomNoActionPerformed(evt);
            }
        });

        txtRoomPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRoomPriceActionPerformed(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/administrator-icon (3).png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 51));
        jLabel2.setText("Welcome Admin");

        Exit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });

        RoomTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        RoomTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Room number", "Room price", "Bed", "Type"
            }
        ));
        RoomTable.setRowHeight(26);
        RoomTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RoomTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(RoomTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jLabel2)
                        .addGap(109, 109, 109)
                        .addComponent(BookedDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtRoomPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Bedno, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(typeroom, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(AddRooms, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(DeleteRooms, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(UpdateRooms, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(ShowRooms, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(280, 280, 280)
                        .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(BookedDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtRoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(txtRoomPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(Bedno, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(typeroom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddRooms, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeleteRooms, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(UpdateRooms, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ShowRooms, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UpdateRoomsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateRoomsActionPerformed
        
        String ern = txtRoomNo.getText();
        String erp = txtRoomPrice.getText();
        String etype = (String)typeroom.getSelectedItem();
        String ebed = (String) Bedno.getSelectedItem();

        if(ern.equals(""))
        {
            JOptionPane.showMessageDialog(null,"enter room no");
        }
        
        if(erp.equals(""))
        {
            JOptionPane.showMessageDialog(null,"enter room price");
        }
               
        if(ebed.equals("Select"))
        {
            JOptionPane.showMessageDialog(null,"plz select bed no");
        }
        if(etype.equals("Select"))
        {
            JOptionPane.showMessageDialog(null,"plz select room type");
        }
        else
        {
        try
        {
        con = MyConnection.getConnection();
        String sql = "update roominfo set room_price=?,bed =?,type=? where room_no=?";
        ps = con.prepareStatement(sql);
        int rn = Integer.parseInt(txtRoomNo.getText());
        ps.setInt(4,rn);
        int rp = Integer.parseInt(txtRoomPrice.getText());
        ps.setInt(1,rp);
        int bed1 = Integer.parseInt((String)Bedno.getSelectedItem());
        ps.setInt(2, bed1);
        ps.setString(3,String.valueOf(typeroom.getSelectedItem()));
        if(ps.executeUpdate()!=0)
           {
               JOptionPane.showMessageDialog(this, "updated");
           }else
           {
               JOptionPane.showMessageDialog(this, "room no not found");
           }
        }
        catch(Exception e)
        {
            
            
            JOptionPane.showMessageDialog(this,""+e);
        }
        }
    }//GEN-LAST:event_UpdateRoomsActionPerformed

    private void AddRoomsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddRoomsActionPerformed
        
        String ern = txtRoomNo.getText();
        String erp = txtRoomPrice.getText();
        String etype = (String)typeroom.getSelectedItem();
        String ebed = (String) Bedno.getSelectedItem();
        
        if(ern.equals(""))
        {
            JOptionPane.showMessageDialog(null,"enter room no");
        }
        if(erp.equals(""))
        {
            JOptionPane.showMessageDialog(null,"enter room price");
        }
        if(ebed.equals("Select"))
        {
            JOptionPane.showMessageDialog(null,"plz select bed no");
        }
        if(etype.equals("Select"))
        {
            JOptionPane.showMessageDialog(null,"plz select room type");
        }
        else
        {
        try
        {
        con = MyConnection.getConnection();
        String sql = "insert into roominfo(room_no,room_price,bed,type) values(?,?,?,?)";
        ps = con.prepareStatement(sql);
        int rn = Integer.parseInt(txtRoomNo.getText());
        ps.setInt(1,rn);
        int rp = Integer.parseInt(txtRoomPrice.getText());
        ps.setInt(2,rp);
        int bed1 = Integer.parseInt((String)Bedno.getSelectedItem());
        ps.setInt(3, bed1);
        ps.setString(4,String.valueOf(typeroom.getSelectedItem()));
        if(ps.executeUpdate()!=0)
           {
               JOptionPane.showMessageDialog(this, "Room added");
           }else
           {
               JOptionPane.showMessageDialog(this, "Ooops Something went Wrong");
           }
        }
        catch(Exception e)
        {
            
            JOptionPane.showMessageDialog(this,"room number already exist");
        }
        }
    }//GEN-LAST:event_AddRoomsActionPerformed

    private void DeleteRoomsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteRoomsActionPerformed
        
        String ern = txtRoomNo.getText();
        if(ern.equals(""))
        {
            JOptionPane.showMessageDialog(null,"enter room no");
        }
        
        else
        {
        try
        {
        con = MyConnection.getConnection();
        String sql = "delete from roominfo where room_no="+txtRoomNo.getText();
        ps = con.prepareStatement(sql);
        if(ps.executeUpdate()!=0)
           {
               JOptionPane.showMessageDialog(this, "Room deleted");
           }else
           {
               JOptionPane.showMessageDialog(this, "Ooops Something went Wrong");
           }
        }
        catch(Exception e)
        {
            
            JOptionPane.showMessageDialog(this,""+e);
        }
        }
    }//GEN-LAST:event_DeleteRoomsActionPerformed

    private void BookedDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookedDetailsActionPerformed
        
        
        try
        {
            con = MyConnection.getConnection();
            String sql = "select userinfo.username,userinfo.mobile,registered_room.room_no,\n" +
"registered_room.guest_no,registered_room.check_in,registered_room.check_out,\n" +
"registered_room.booked_date from userinfo\n" +
"inner join registered_room\n" +
"on userinfo.userid=registered_room.userid;";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            RoomTable.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, ""+e);
        }
    }//GEN-LAST:event_BookedDetailsActionPerformed

    private void txtRoomNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRoomNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRoomNoActionPerformed

    private void txtRoomPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRoomPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRoomPriceActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    private void ShowRoomsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowRoomsActionPerformed
        try
        {
            con = MyConnection.getConnection();
            String sql = "select * from roominfo";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            RoomTable.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, ""+e);
        }
    }//GEN-LAST:event_ShowRoomsActionPerformed

    private void RoomTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RoomTableMouseClicked

    }//GEN-LAST:event_RoomTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddRooms;
    private javax.swing.JComboBox<String> Bedno;
    private javax.swing.JButton BookedDetails;
    private javax.swing.JButton DeleteRooms;
    private javax.swing.JButton Exit;
    private javax.swing.JTable RoomTable;
    private javax.swing.JButton ShowRooms;
    private javax.swing.JButton UpdateRooms;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField txtRoomNo;
    private javax.swing.JTextField txtRoomPrice;
    private javax.swing.JComboBox<String> typeroom;
    // End of variables declaration//GEN-END:variables
}
